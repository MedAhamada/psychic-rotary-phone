var _excluded = ["size", "isSelected"];
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';

/**
 *
 * @param {*} size  - Number (default: 18)
 * @param isSelected
 * @param props
 */
var HandWaving = function HandWaving(_ref) {
  var _ref$size = _ref.size,
    size = _ref$size === void 0 ? 18 : _ref$size,
    _ref$isSelected = _ref.isSelected,
    isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected,
    props = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement("svg", {
    width: size,
    height: size,
    viewBox: "0 0 22 22",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("rect", {
    width: "22",
    height: "22",
    rx: "4",
    fill: isSelected ? '#5A88FF' : props.color
  }), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M10.0456 4.79917C9.8295 4.74138 9.59934 4.77173 9.40565 4.88355C9.21195 4.99538 9.07059 5.17954 9.01261 5.39554C8.95465 5.61149 8.98478 5.84162 9.09637 6.03537C9.09634 6.03532 9.0964 6.03542 9.09637 6.03537L10.9243 9.20153C11.0797 9.47057 10.9875 9.81458 10.7185 9.96991C10.4494 10.1252 10.1054 10.0331 9.95007 9.76403L8.12194 6.59762C7.86139 6.14546 7.79079 5.60794 7.92607 5.10392C8.06134 4.5999 8.3912 4.17021 8.84314 3.90928C9.29509 3.64835 9.83214 3.57753 10.3363 3.71238C10.8404 3.84724 11.2704 4.17674 11.5317 4.62846L14.3444 9.50026C14.4997 9.7693 14.4076 10.1133 14.1385 10.2687C13.8695 10.424 13.5255 10.3318 13.3701 10.0628L10.5579 5.19178C10.5578 5.19172 10.5579 5.19183 10.5579 5.19178C10.4459 4.99827 10.2616 4.85695 10.0456 4.79917Z",
    fill: isSelected ? 'white' : '#919AAB'
  }), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M7.04672 5.22904C6.93965 5.2003 6.82796 5.19294 6.71805 5.20739C6.60813 5.22184 6.50214 5.25781 6.40613 5.31324C6.31012 5.36867 6.22597 5.44248 6.1585 5.53044C6.09103 5.61841 6.04156 5.71881 6.01291 5.82591C5.98426 5.933 5.977 6.0447 5.99154 6.1546C6.00608 6.26451 6.04214 6.37047 6.09765 6.46643L8.76976 11.0947C8.92509 11.3637 8.83291 11.7077 8.56387 11.8631C8.29483 12.0184 7.95081 11.9262 7.79548 11.6572L5.12384 7.02975C5.1238 7.02968 5.12388 7.02981 5.12384 7.02975C4.99438 6.80588 4.91017 6.55851 4.87626 6.30214C4.84233 6.0457 4.85928 5.78508 4.92612 5.53519C4.99297 5.2853 5.10841 5.05103 5.26584 4.84577C5.42327 4.64052 5.61961 4.4683 5.84363 4.33896C6.06765 4.20962 6.31496 4.1257 6.57144 4.09198C6.82791 4.05827 7.08851 4.07544 7.33835 4.14249C7.58818 4.20955 7.82236 4.32518 8.02748 4.48278C8.23248 4.64029 8.40445 4.83663 8.53358 5.06059L10.9242 9.20127C11.0795 9.47031 10.9874 9.81433 10.7183 9.96966C10.4493 10.125 10.1053 10.0328 9.94992 9.76377L7.5593 5.62309C7.50395 5.52703 7.42998 5.44242 7.34207 5.37488C7.25415 5.30733 7.1538 5.25778 7.04672 5.22904Z",
    fill: isSelected ? 'white' : '#919AAB'
  }), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M14.5901 7.04447C14.483 7.01573 14.3713 7.00837 14.2614 7.02282C14.1515 7.03727 14.0455 7.07323 13.9495 7.12867C13.8535 7.1841 13.7693 7.25791 13.7018 7.34587C13.6344 7.43384 13.5849 7.53424 13.5563 7.64134C13.5276 7.74843 13.5203 7.86013 13.5349 7.97003C13.5494 8.07994 13.5855 8.1859 13.641 8.28186L14.3444 9.50012C14.4997 9.76916 14.4075 10.1132 14.1385 10.2685C13.6217 10.5669 13.2446 11.0583 13.0901 11.6347C12.9357 12.2111 13.0165 12.8253 13.3149 13.3421C13.4702 13.6111 13.3781 13.9551 13.109 14.1105C12.84 14.2658 12.496 14.1736 12.3406 13.9046C11.8931 13.1294 11.7718 12.2082 12.0035 11.3435C12.186 10.6622 12.576 10.06 13.1124 9.61635L12.6672 8.84518C12.5377 8.62126 12.4535 8.37402 12.4196 8.11757C12.3857 7.86113 12.4026 7.60051 12.4695 7.35062C12.5363 7.10073 12.6518 6.86646 12.8092 6.6612C12.9666 6.45595 13.163 6.28373 13.387 6.15439C13.611 6.02505 13.8583 5.94113 14.1148 5.90741C14.3713 5.8737 14.6319 5.89087 14.8817 5.95792C15.1315 6.02498 15.3657 6.14061 15.5708 6.29821C15.7758 6.45572 15.9478 6.65206 16.0769 6.87602L17.4831 9.3116C17.4831 9.31157 17.4831 9.31164 17.4831 9.3116C17.8896 10.0153 18.1535 10.7922 18.2597 11.5979C18.3659 12.4036 18.3124 13.2223 18.1021 14.0073C17.8919 14.7923 17.529 15.5282 17.0344 16.173C16.5397 16.8177 15.9228 17.3587 15.219 17.7651C14.5152 18.1714 13.7383 18.4351 12.9326 18.5412C12.1268 18.6472 11.3081 18.5935 10.5232 18.383C9.7382 18.1726 9.00239 17.8096 8.35774 17.3148C7.71309 16.82 7.17223 16.203 6.76605 15.4991L4.09424 10.8714C3.83368 10.4192 3.76308 9.88171 3.89836 9.37769C4.03363 8.87367 4.36349 8.44398 4.81543 8.18305C5.26738 7.92212 5.80443 7.8513 6.30856 7.98615C6.8127 8.12101 7.24267 8.45051 7.50397 8.90223L8.76983 11.0948C8.92516 11.3638 8.83298 11.7078 8.56394 11.8632C8.2949 12.0185 7.95088 11.9263 7.79556 11.6573L6.53017 9.46555C6.53013 9.46548 6.53021 9.46562 6.53017 9.46555C6.41816 9.27206 6.23383 9.13072 6.01785 9.07294C5.80179 9.01515 5.57162 9.0455 5.37793 9.15733C5.18424 9.26915 5.04288 9.45331 4.9849 9.66931C4.92695 9.88525 4.95706 10.1154 5.06863 10.3091C5.06859 10.309 5.06867 10.3092 5.06863 10.3091L7.74039 14.9367C8.07272 15.5126 8.5153 16.0175 9.04274 16.4224C9.57018 16.8272 10.1722 17.1242 10.8145 17.2964C11.4567 17.4686 12.1266 17.5125 12.7858 17.4258C13.445 17.339 14.0807 17.1233 14.6565 16.7908C15.2324 16.4583 15.7371 16.0157 16.1418 15.4882C16.5465 14.9606 16.8434 14.3586 17.0154 13.7163C17.1874 13.074 17.2312 12.4041 17.1443 11.7449C17.0575 11.0857 16.8415 10.4501 16.509 9.87432L15.1026 7.43852C15.0473 7.34246 14.9733 7.25785 14.8854 7.19031C14.7975 7.12276 14.6971 7.0732 14.5901 7.04447Z",
    fill: isSelected ? 'white' : '#919AAB'
  }), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M5.09435 15.8553C5.36361 15.7004 5.7075 15.793 5.86245 16.0623C6.39972 16.996 7.13747 17.7987 8.0225 18.4128C8.27774 18.5899 8.34109 18.9404 8.164 19.1956C7.9869 19.4509 7.63643 19.5142 7.38119 19.3371C6.35941 18.6282 5.50766 17.7013 4.88737 16.6234C4.73243 16.3542 4.82509 16.0103 5.09435 15.8553Z",
    fill: isSelected ? 'white' : '#919AAB'
  }), /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M15.9217 5.15662C15.4515 4.88505 14.9181 4.74212 14.3751 4.74219C14.0644 4.74223 13.8125 4.49042 13.8125 4.17976C13.8125 3.8691 14.0643 3.61723 14.3749 3.61719C15.1155 3.61709 15.8431 3.81204 16.4844 4.18242C17.1257 4.5528 17.6581 5.08556 18.0281 5.72707C18.1834 5.99618 18.091 6.34016 17.8219 6.49538C17.5528 6.65059 17.2088 6.55827 17.0536 6.28916C16.7823 5.8188 16.3919 5.42818 15.9217 5.15662Z",
    fill: isSelected ? 'white' : '#919AAB'
  }));
};
export default HandWaving;